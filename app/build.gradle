apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "krishna.schedule.planner"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 4
        versionName "1.0.0-beta01"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

configurations {
    ktlint
}

dependencies {
    def constraint_layout_version = '2.0.0-rc1'
    def fragment_ktx_version = '1.2.5'
    def ktx_version = '1.3.1'
    def lifecycle_version = '2.2.0'
    def material_version = '1.3.0-alpha02'
    def paging_version = '2.1.2'
    def room_version = '2.2.5'
    def junit_ktx_version = '1.1.1'
    def robolectric_version = '4.3.1'
    def androidx_test_core_version = '1.2.0'
    def androidx_hilt_version = '1.0.0-alpha02'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "com.google.android.material:material:$material_version"

    // Fragment KTX
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"

    // Navigation KTX
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Room dependencies
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    // Required: Room compiler (avoid RuntimeException - cannot find implementation for database)
    kapt "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    // Paging
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    implementation 'com.jakewharton.timber:timber:4.7.1'

    ktlint('com.pinterest:ktlint:0.37.2')

    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    implementation 'com.github.serbelga:android-companion:1.0.0-alpha01'

    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test.ext:junit-ktx:$junit_ktx_version"

    testImplementation "androidx.test:core-ktx:$androidx_test_core_version"

    testImplementation "org.robolectric:robolectric:$robolectric_version"

    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$androidx_hilt_version"
    // When using Kotlin.
    kapt "androidx.hilt:hilt-compiler:$androidx_hilt_version"

    // For instrumentation tests
    androidTestImplementation  "com.google.dagger:hilt-android-testing:$dagger_hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$dagger_hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"
}

kapt {
    correctErrorTypes true
}

hilt {
    enableTransformForLocalTests = true
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}
